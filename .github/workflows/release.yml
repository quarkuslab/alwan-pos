name: Android Release Build

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+*" # Matches v1.2.3, v1.2.3-beta, etc.

jobs:
  validate-tag:
    runs-on: ubuntu-latest
    steps:
      - name: Validate tag format
        run: |
          if ! [[ ${{ github.ref_name }} =~ ^v[0-9]+\.[0-9]+\.[0-9]+(-[a-zA-Z0-9]+)?$ ]]; then
            echo "Invalid tag format. Must be like v1.2.3 or v1.2.3-beta"
            exit 1
          fi

  build:
    needs: validate-tag
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Create keystore directory
        run: |
          mkdir -p android/app/keystore

      - name: Decode Keystore
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > android/app/keystore/release.keystore

      - name: Create keystore.properties
        run: |
          cat << EOF > android/keystore.properties
          storePassword=${{ secrets.KEYSTORE_STORE_PASSWORD }}
          keyPassword=${{ secrets.KEYSTORE_KEY_PASSWORD }}
          keyAlias=${{ secrets.KEYSTORE_KEY_ALIAS }}
          storeFile=keystore/release.keystore
          EOF

      - name: Build Web Assets
        run: pnpm run web:build

      - name: Copy Web Assets to Android
        run: pnpm run android:copy

      - name: Build Release APK
        run: cd android && ./gradlew assembleRelease

      - name: Rename APK with version
        run: |
          VERSION=${{ github.ref_name }}
          mkdir -p releases
          cp android/app/build/outputs/apk/release/app-release.apk "releases/alwan-pos-${VERSION}.apk"

      - name: Generate release notes
        id: release_notes
        run: |
          echo "### Changes in ${{ github.ref_name }}" > release_notes.md
          echo "" >> release_notes.md
          git log --pretty=format:"* %s" $(git describe --tags --abbrev=0 HEAD^)..HEAD >> release_notes.md

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: releases/*.apk
          body_path: release_notes.md
          draft: false
          prerelease: ${{ contains(github.ref_name, '-') }} # True if tag contains hyphen (e.g., -beta)
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: release-apk
          path: releases/*.apk
          retention-days: 7
